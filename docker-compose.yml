version: "3"
services:
  wiki_db:
    image: postgres:13
    env_file: wiki_db.env
    restart: always
    logging:
      driver: "none"
    volumes:
      - "./data/wiki/db:/var/lib/postgresql/data"
    networks:
      - wiki_db
  wiki:
    image: requarks/wiki:2
    env_file: wiki.env
    restart: always
    depends_on:
      - wiki_db
    networks:
      - wiki_db
      - nginx

  tickets_db:
    image: postgres:13
    env_file: tickets_db.env
    restart: always
    logging:
      driver: "none"
    volumes:
      - "./data/tickets/db:/var/lib/postgresql/data"
    networks:
      tickets_internal:
        aliases:
          - db
  tickets_web:
    image: rotheross/otobo:rel-10_0_9
    restart: always
    env_file: tickets.env
    cap_drop:
        - ALL
    depends_on:
      - tickets_db
      # - tickets_elastic
      - tickets_redis
    expose:
      - 5000
    volumes:
      - tickets_opt_otobo:/opt/otobo
    command: web
    networks:
      nginx:
      tickets_internal:
        aliases:
          - web
  tickets_daemon:
    image: rotheross/otobo:rel-10_0_9
    restart: always
    env_file: tickets.env
    cap_drop:
        - ALL
    depends_on:
      - tickets_web
    volumes:
      - tickets_opt_otobo:/opt/otobo
    command: daemon
    networks:
      tickets_internal:
        aliases:
          - daemon
  # tickets_elastic:
  #   image: rotheross/otobo-elasticsearch:rel-10_0_9
  #   restart: always
  #   cap_drop:
  #       - ALL
  #   cap_add:
  #       - CAP_SYS_CHROOT
  #       - CAP_SETUID
  #   environment:
  #     discovery.type: single-node
  #     ES_JAVA_OPTS: "-Xms512m -Xmx512m"
  #   volumes:
  #     - tickets_elasticsearch_data:/usr/share/elasticsearch/data
  #   networks:
  #     tickets_internal:
  #       aliases:
  #         - elastic
  tickets_redis:
    image: redis:6.0.8-alpine
    restart: always
    user: redis:redis
    cap_drop:
        - ALL
    volumes:
      - tickets_redis_data:/data
    networks:
      tickets_internal:
        aliases:
          - redis

  calendso_db:
    image: postgres:13
    env_file: calendso_db.env
    restart: always
    logging:
      driver: "none"
    volumes:
      - "./data/calendso/db:/var/lib/postgresql/data"
    networks:
      - calendso_db
  calendso:
    image: registry.gitlab.com/couchers/calendso-docker/calendso
    expose:
      - 3000
    env_file: calendso.env
    depends_on:
      - calendso_db
    networks:
      - calendso_db
      - nginx

  nginx:
    build: nginx
    env_file: nginx.env
    restart: always
    volumes:
      - "./data/certs/:/certs/"
      - "./data/nginx/logs/:/var/log/nginx/"
    ports:
      - 80:80
      - 443:443
    networks:
      - nginx
networks:
  wiki_db:
    driver: bridge
  nginx:
    driver: bridge
  tickets_internal:
    driver: bridge
  calendso_db:
    driver: bridge

volumes:
  tickets_opt_otobo: {}
  # tickets_elasticsearch_data: {}
  tickets_redis_data: {}
